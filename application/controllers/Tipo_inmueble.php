<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Tipo_inmueble extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Tipo_inmueble_model');
    } 

    /*
     * Listing of tipo_inmueble
     */
    function index()
    {
        $data['all_tipo_inmueble'] = $this->Tipo_inmueble_model->get_all_tipo_inmueble();
        
        $data['_view'] = 'tipo_inmueble/index';
        $this->load->view('layouts/main',$data);
    }

    /*
     * Adding a new tipo_inmueble
     */
    function add()
    {   
        $this->load->library('form_validation');
        $this->form_validation->set_rules('nombre_tin','Nombre','trim|required', array('required' => 'Este Campo no debe ser vacio'));
        $this->form_validation->set_rules('codigo_tin','Código','trim|required', array('required' => 'Este Campo no debe ser vacio'));
        if($this->form_validation->run())     
        {
            $params = array(
                'nombre_tin' => $this->input->post('nombre_tin'),
                'codigo_tin' => $this->input->post('codigo_tin'),
            );
            $id_tin = $this->Tipo_inmueble_model->add_tipo_inmueble($params);
            redirect('tipo_inmueble/index');
        }else{            
            $data['_view'] = 'tipo_inmueble/add';
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Editing a tipo_inmueble
     */
    function edit($id_tin)
    {   
        // check if the Diametrored exists before trying to edit it
        $data['tipo_inmueble'] = $this->Tipo_inmueble_model->get_tipo_inmueble($id_tin);
        
        if(isset($data['tipo_inmueble']['id_tin']))
        {
            $this->load->library('form_validation');
            $this->form_validation->set_rules('nombre_tin','Nombre','trim|required', array('required' => 'Este Campo no debe ser vacio'));
            $this->form_validation->set_rules('codigo_tin','Código','trim|required', array('required' => 'Este Campo no debe ser vacio'));
            if($this->form_validation->run())     
            {
                $params = array(
                    'nombre_tin' => $this->input->post('nombre_tin'),
                    'codigo_tin' => $this->input->post('codigo_tin'),
                );
                
                $this->Tipo_inmueble_model->update_tipo_inmueble($id_tin,$params);            
                redirect('tipo_inmueble/index');
            }else{
                $data['_view'] = 'tipo_inmueble/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The tipo_inmueble you are trying to edit does not exist.');
    }
    
    /* * añadir tipo_inmueble */
    /*function aniadirtipo_inmueble()
    {
        if ($this->input->is_ajax_request()) {
            $nombre_tin = $this->input->post('nombre_tin');
            $codigo_tin = $this->input->post('codigo_tin');
            if($nombre_tin != ""){
                $params = array(
                'nombre_tin' => $nombre_tin,
                'codigo_tin' => $codigo_tin,
                );
                $id_tin = $this->Tipo_inmueble_model->add_tipo_inmueble($params);
                $datos = $this->Tipo_inmueble_model->get_tipo_inmueble($id_tin);
                echo json_encode($datos);
            }else{
                echo json_encode(null);
            }
        }
        else
        {                 
            show_404();
        }
    }*/
}
