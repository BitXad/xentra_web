<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Direccion extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Direccion_model');
    } 

    /*
     * Listing of direccion
     */
    function index()
    {
        $data['all_direccion'] = $this->Direccion_model->get_all_direccion();
        
        $data['_view'] = 'direccion/index';
        $this->load->view('layouts/main',$data);
    }

    /*
     * Adding a new direccion
     */
    function add()
    {   
        $this->load->library('form_validation');
        $this->form_validation->set_rules('nombre_dir','Nombre','trim|required', array('required' => 'Este Campo no debe ser vacio'));
        $this->form_validation->set_rules('codigo_dir','Código','trim|required', array('required' => 'Este Campo no debe ser vacio'));
        if($this->form_validation->run())     
        {
            $params = array(
                'nombre_dir' => $this->input->post('nombre_dir'),
                'codigo_dir' => $this->input->post('codigo_dir'),
            );
            $id_dir = $this->Direccion_model->add_direccion($params);
            redirect('direccion/index');
        }else{            
            $data['_view'] = 'direccion/add';
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Editing a direccion
     */
    function edit($id_dir)
    {   
        // check if the Diametrored exists before trying to edit it
        $data['direccion'] = $this->Direccion_model->get_direccion($id_dir);
        
        if(isset($data['direccion']['id_dir']))
        {
            $this->load->library('form_validation');
            $this->form_validation->set_rules('nombre_dir','Nombre','trim|required', array('required' => 'Este Campo no debe ser vacio'));
            $this->form_validation->set_rules('codigo_dir','Código','trim|required', array('required' => 'Este Campo no debe ser vacio'));
            if($this->form_validation->run())     
            {
                $params = array(
                    'nombre_dir' => $this->input->post('nombre_dir'),
                    'codigo_dir' => $this->input->post('codigo_dir'),
                );
                
                $this->Direccion_model->update_direccion($id_dir,$params);            
                redirect('direccion/index');
            }else{
                $data['_view'] = 'direccion/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The direccion you are trying to edit does not exist.');
    }
    
    /* * añadir direccion */
    /*function aniadirdireccion()
    {
        if ($this->input->is_ajax_request()) {
            $nombre_dir = $this->input->post('nombre_dir');
            $codigo_dir = $this->input->post('codigo_dir');
            if($nombre_dir != ""){
                $params = array(
                'nombre_dir' => $nombre_dir,
                'codigo_dir' => $codigo_dir,
                );
                $id_dir = $this->Direccion_model->add_direccion($params);
                $datos = $this->Direccion_model->get_direccion($id_dir);
                echo json_encode($datos);
            }else{
                echo json_encode(null);
            }
        }
        else
        {                 
            show_404();
        }
    }*/
}
